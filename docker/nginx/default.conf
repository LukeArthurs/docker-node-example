server {
    # Http to Https redirect
    listen 80;
    listen [::]:80;
    server_name example.com www.example.com;

    return 301 https://www.example.com$request_uri;
}

server {
    # Redirect to www url (Optional but I personally like always having the same url.)
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name example.com;

    ssl_certificate /etc/nginx/ssl/www.example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/www.example.com.key;

    return 301 https://www.example.com$request_uri;
}

server {
    # SSL listening with ipv6 support
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.example.com;

    # Ssl certificate and key locations
    ssl_certificate /etc/nginx/ssl/www.example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/www.example.com.key;

    access_log /var/log/nginx/example.access.log;
    error_log /var/log/nginx/example.error.log;

    index index.html index.htm index.php;
    client_max_body_size 5M;

    # Everything from https://www.example.com/api will be redirected to node
    # Note that node will get this url coming in http://example_node/api/whatever-else-is-in-the-url
    # To remove api from the url add a "/" to the proxy pass. E.g. proxy_pass http://example_node:3000/;
    location /api {
        proxy_pass http://example_node:3000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header HTTPS $https;
    }

    # Everything from https://www.example.com/keystone will be redirected to node this is specific to keystones admin panel
    location /keystone {
        proxy_pass http://example_node:3000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header HTTPS $https;
    }

    # Everything else with no defined location will be sent to your compiled angular index.html
    # try_files ensures that any url will be accepted as well so angulars router can go the correct page on page load.
    location / {
        root /var/www/html;
        try_files $uri $uri/ /index.html =404;
    }
}